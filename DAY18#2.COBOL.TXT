000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01 INPUT-RECORD.
001800    05 IN-NUMBER PIC X(160).
001900 WORKING-STORAGE SECTION.
002000 01 INPUT-FILE-EOF PIC X(5).
002100    88 EOF-MET VALUE "E-O-F".
002200 01 STACK-FLAG PIC X(5).
002300    88 STACK-FULL VALUE "FULL ".
002400    88 STACK-EMPTY VALUE "EMPTY".
002500 01 PAREN-STATUS-1 PIC X(5).
002600    88 PAREN-POPPED VALUE "PAREN".
002700 01 PAREN-STATUS-2 PIC X(4).
002800    88 LEFT-PAREN VALUE "LEFT".
002900
003000 01 HOME-WORK-ARRAY.
003100    05 HOME-WORK
003200       OCCURS 380 TIMES
003300       PIC X(160).
003400 01 HOME-WORK-COUNT PIC 999.
003500 01 HOME-WORK-IDX PIC 999.
003600 01 LINE-IDX PIC 999.
003700
003800 01 SUMS-ARRAY.
003900    05 SUMS OCCURS 380 TIMES.
004000       10 SUMS-RESULT PIC 9(15).
004100       10 SUMS-OUTPUT-ALL PIC X(90).
004200       10 SUMS-OUTPUT
004300          REDEFINES SUMS-OUTPUT-ALL
004400          OCCURS 90 TIMES PIC X.
004500 01 SUMS-OUTPUT-IDX PIC 999.
004600
004700 01 OPERANDS.
004800    05 OPERAND-STACK
004900       OCCURS 90 TIMES PIC X.
005000 01 OPERAND-STACK-IDX PIC 999.
005100 01 TEMP-OPERAND PIC X.
005200
005300 01 RPN.
005400    05 RPN-STACK
005500       OCCURS 90 TIMES PIC 9(15).
005600 01 RPN-STACK-IDX PIC 999.
005700 01 RPN-LEFT-NUM PIC 9(15).
005800 01 RPN-RIGHT-NUM PIC 9(15).
005900
006000 01 OVERALL-TOTAL PIC 9(15).
006100
006200 PROCEDURE DIVISION.
006300     OPEN INPUT INPUT-FILE
006400     MOVE 0 TO HOME-WORK-COUNT
006500     MOVE 0 TO OVERALL-TOTAL
006600     PERFORM WITH TEST BEFORE UNTIL EOF-MET
006700       READ INPUT-FILE
006800       AT END
006900         SET EOF-MET TO TRUE
007000       END-READ
007100       IF NOT EOF-MET THEN
007200         ADD 1 TO HOME-WORK-COUNT
007300         MOVE IN-NUMBER TO HOME-WORK(HOME-WORK-COUNT)
007400         MOVE HOME-WORK-COUNT TO HOME-WORK-IDX
007500         PERFORM PARSE-LINE
007600         PERFORM CALC-RPN
007700         COMPUTE OVERALL-TOTAL =
007800                 OVERALL-TOTAL +
007900                 SUMS-RESULT(HOME-WORK-IDX)
008000       END-IF
008100     END-PERFORM
008200     CLOSE INPUT-FILE
008300     DISPLAY "TOTAL: ", OVERALL-TOTAL
008400*
008500     STOP RUN.
008600*
008700 PARSE-LINE.
008800     MOVE 1 TO LINE-IDX
008900     MOVE 1 TO SUMS-OUTPUT-IDX
009000     MOVE 0 TO OPERAND-STACK-IDX
009100     MOVE SPACES TO TEMP-OPERAND
009200     SET STACK-EMPTY TO TRUE
009300     PERFORM
009400      UNTIL LINE-IDX > 160
009500       EVALUATE HOME-WORK(HOME-WORK-IDX)(LINE-IDX:1)
009600        WHEN 0 THRU 9 PERFORM DO-NUMBER
009700        WHEN "*" PERFORM DO-MULTIPLY
009800        WHEN "+" PERFORM DO-ADDITION
009900        WHEN "(" PERFORM DO-LEFT-PAREN
010000        WHEN ")" PERFORM DO-RIGHT-PAREN
010100       END-EVALUATE
010200       ADD 1 TO LINE-IDX
010300     END-PERFORM
010400     PERFORM UNTIL STACK-EMPTY
010500       PERFORM DO-OPERAND-UNSTACK
010600     END-PERFORM
010700     EXIT.
010800*
010900 DO-NUMBER.
011000     MOVE HOME-WORK(HOME-WORK-IDX)(LINE-IDX:1)
011100     TO   SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
011200     ADD 1 TO SUMS-OUTPUT-IDX
011300     EXIT.
011400*
011500 DO-MULTIPLY.
011600     MOVE SPACES TO PAREN-STATUS-2
011700     IF OPERAND-STACK(OPERAND-STACK-IDX) = "("
011800       SET LEFT-PAREN TO TRUE
011900     ELSE
012000       PERFORM
012100        UNTIL STACK-EMPTY OR LEFT-PAREN
012200         PERFORM DO-OPERAND-UNSTACK
012300         IF OPERAND-STACK(OPERAND-STACK-IDX) = "("
012400           SET LEFT-PAREN TO TRUE
012500         END-IF
012600       END-PERFORM
012700     END-IF
012800     PERFORM DO-OPERAND-STACK
012900     EXIT.
013000*
013100 DO-ADDITION.
013200     PERFORM DO-OPERAND-STACK
013300     EXIT.
013400*
013500 DO-LEFT-PAREN.
013600     PERFORM DO-OPERAND-STACK
013700     EXIT.
013800*
013900 DO-RIGHT-PAREN.
014000     MOVE SPACES TO PAREN-STATUS-1
014100     MOVE SPACES TO TEMP-OPERAND
014200     PERFORM DO-OPERAND-POP
014300     PERFORM WITH TEST BEFORE UNTIL PAREN-POPPED
014400       MOVE TEMP-OPERAND
014500       TO   SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
014600       ADD 1 TO SUMS-OUTPUT-IDX
014700       PERFORM DO-OPERAND-POP
014800     END-PERFORM
014900     EXIT.
015000*
015100 DO-OPERAND-POP.
015200     IF STACK-FULL
015300       MOVE OPERAND-STACK(OPERAND-STACK-IDX)
015400       TO TEMP-OPERAND
015500       MOVE SPACES TO OPERAND-STACK(OPERAND-STACK-IDX)
015600       SUBTRACT 1 FROM OPERAND-STACK-IDX
015700       IF OPERAND-STACK-IDX = 0
015800         SET STACK-EMPTY TO TRUE
015900       END-IF
016000       IF TEMP-OPERAND = "("
016100         SET PAREN-POPPED TO TRUE
016200       END-IF
016300     END-IF
016400     EXIT.
016500*
016600 DO-OPERAND-UNSTACK.
016700     PERFORM DO-OPERAND-POP
016800     MOVE TEMP-OPERAND
016900     TO SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
017000     ADD 1 TO SUMS-OUTPUT-IDX
017100     EXIT.
017200*
017300 DO-OPERAND-STACK.
017400     ADD 1 TO OPERAND-STACK-IDX
017500     SET STACK-FULL TO TRUE
017600     MOVE HOME-WORK(HOME-WORK-IDX)(LINE-IDX:1)
017700     TO   OPERAND-STACK(OPERAND-STACK-IDX)
017800     EXIT.
017900*
018000 CALC-RPN.
018100     MOVE 0 TO RPN-STACK-IDX
018200     MOVE 1 TO SUMS-OUTPUT-IDX
018300     PERFORM UNTIL SUMS-OUTPUT-IDX > 90
018400       EVALUATE SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
018500        WHEN 0 THRU 9 PERFORM DO-RPN-STACK
018600        WHEN "+" PERFORM DO-RPN-ADDITION
018700        WHEN "*" PERFORM DO-RPN-MULTIPLY
018800        WHEN OTHER MOVE 91 TO SUMS-OUTPUT-IDX
018900       END-EVALUATE
019000     END-PERFORM
019100     EXIT.
019200*
019300 DO-RPN-ADDITION.
019400     PERFORM DO-RPN-UNSTACK
019500     COMPUTE SUMS-RESULT(HOME-WORK-IDX) =
019600             (RPN-LEFT-NUM + RPN-RIGHT-NUM)
019700     PERFORM DO-RPN-STACK-RESULT
019800     EXIT.
019900*
020000 DO-RPN-MULTIPLY.
020100     PERFORM DO-RPN-UNSTACK
020200     COMPUTE SUMS-RESULT(HOME-WORK-IDX) =
020300             (RPN-LEFT-NUM * RPN-RIGHT-NUM)
020400     PERFORM DO-RPN-STACK-RESULT
020500     EXIT.
020600*
020700 DO-RPN-STACK.
020800     ADD 1 TO RPN-STACK-IDX
020900     MOVE SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
021000     TO   RPN-STACK(RPN-STACK-IDX)
021100     ADD 1 TO SUMS-OUTPUT-IDX
021200     EXIT.
021300*
021400 DO-RPN-STACK-RESULT.
021500     ADD 1 TO RPN-STACK-IDX
021600     MOVE SUMS-RESULT(HOME-WORK-IDX)
021700     TO   RPN-STACK(RPN-STACK-IDX)
021800     ADD 1 TO SUMS-OUTPUT-IDX
021900     EXIT.
022000*
022100 DO-RPN-UNSTACK.
022200     MOVE RPN-STACK(RPN-STACK-IDX)
022300     TO   RPN-LEFT-NUM
022400     MOVE 0 TO RPN-STACK(RPN-STACK-IDX)
022500     SUBTRACT 1 FROM RPN-STACK-IDX
022600     MOVE RPN-STACK(RPN-STACK-IDX)
022700     TO   RPN-RIGHT-NUM
022800     MOVE 0 TO RPN-STACK(RPN-STACK-IDX)
022900     SUBTRACT 1 FROM RPN-STACK-IDX
023000     EXIT.
