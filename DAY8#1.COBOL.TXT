000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01  INPUT-RECORD.
001800     05 IN-OP-CODE       PIC X(3).
001900     05 PIC X.
002000     05 IN-OPERAND.
002100        10 IN-OPERAND-SIGN PIC X.
002200        10 IN-OPERAND-1 PIC 9.
002300        10 IN-OPERAND-2 PIC 9.
002400        10 IN-OPERAND-3 PIC 9.
002500     05 PIC X(72).
002600 WORKING-STORAGE SECTION.
002700 01  INPUT-FILE-EOF      PIC X(5).
002800     88 EOF-MET VALUE 'E-O-F'.
002900 01  PROGRAM-ARRAY.
003000     05 PROGRAM-STATEMENT
003100        OCCURS 620 TIMES INDEXED BY PGM-INDEX.
003200        10 PGM-OP-CODE PIC X(3).
003300        10 PGM-OPERAND PIC S9(4) COMP.
003400        10 PGM-ALREADY-RUN PIC X(3).
003500 77  PGM-COUNTER PIC S9(4) COMP.
003600 77  PGM-ACCUM PIC S9(4) COMP.
003700 01  END-LOOP PIC X(3).
003800     88 ALREADY-RUN VALUE 'YES'.
003900 PROCEDURE DIVISION.
004000 PROCEDURE-HEADER-000.
004100     OPEN INPUT INPUT-FILE
004200     SET PGM-INDEX TO 1
004300*    DISPLAY "PGM Listing"
004400*    DISPLAY "-----------"
004500     PERFORM WITH TEST BEFORE UNTIL EOF-MET
004600       READ INPUT-FILE
004700       AT END
004800         SET EOF-MET TO TRUE
004900       END-READ
005000       IF NOT EOF-MET THEN
005100         MOVE IN-OP-CODE TO PGM-OP-CODE(PGM-INDEX)
005200         MOVE "NO " TO PGM-ALREADY-RUN(PGM-INDEX)
005300         EVALUATE TRUE ALSO TRUE ALSO TRUE
005400          WHEN IN-OPERAND-3 IS NUMERIC
005500          ALSO IN-OPERAND-2 IS NUMERIC
005600          ALSO IN-OPERAND-1 IS NUMERIC
005700           IF IN-OPERAND-SIGN = "+"
005800             COMPUTE PGM-OPERAND(PGM-INDEX) = 0 +
005900                     (IN-OPERAND-1 * 100) +
006000                     (IN-OPERAND-2 * 10) +
006100                     IN-OPERAND-3
006200           ELSE
006300             COMPUTE PGM-OPERAND(PGM-INDEX) = 0 -
006400                     (IN-OPERAND-1 * 100) -
006500                     (IN-OPERAND-2 * 10) -
006600                     IN-OPERAND-3
006700           END-IF
006800          WHEN IN-OPERAND-3 = SPACES
006900          ALSO IN-OPERAND-2 IS NUMERIC
007000          ALSO IN-OPERAND-1 IS NUMERIC
007100           IF IN-OPERAND-SIGN = "+"
007200             COMPUTE PGM-OPERAND(PGM-INDEX) = 0 +
007300                     (IN-OPERAND-1 * 10) +
007400                     IN-OPERAND-2
007500           ELSE
007600             COMPUTE PGM-OPERAND(PGM-INDEX) = 0 -
007700                     (IN-OPERAND-1 * 10) -
007800                     IN-OPERAND-2
007900           END-IF
008000          WHEN IN-OPERAND-3 =  SPACES
008100          ALSO IN-OPERAND-2 =  SPACES
008200          ALSO IN-OPERAND-1 IS NUMERIC
008300           IF IN-OPERAND-SIGN = "+"
008400             COMPUTE PGM-OPERAND(PGM-INDEX) = 0 +
008500                     IN-OPERAND-1
008600           ELSE
008700             COMPUTE PGM-OPERAND(PGM-INDEX) = 0 -
008800                     IN-OPERAND-1
008900           END-IF
009000         END-EVALUATE
009100*        DISPLAY PGM-OP-CODE(PGM-INDEX),
009200*        " ", PGM-OPERAND(PGM-INDEX),
009300*        " ", PGM-ALREADY-RUN(PGM-INDEX)
009400         SET PGM-INDEX UP BY 1
009500       END-IF
009600     END-PERFORM
009700     CLOSE INPUT-FILE
009800*    DISPLAY "--------"
009900*
010000     MOVE 1 TO PGM-COUNTER
010100     PERFORM UNTIL ALREADY-RUN
010200*      DISPLAY "PC: ", PGM-COUNTER,
010300*              " AC: ", PGM-ACCUM,
010400*              " BEFORE: ", PGM-OP-CODE(PGM-COUNTER),
010500*              " ", PGM-OPERAND(PGM-COUNTER)
010600*              " ", PGM-ALREADY-RUN(PGM-COUNTER)
010700       EVALUATE PGM-OP-CODE(PGM-COUNTER)
010800        WHEN "nop"
010900         MOVE "YES" TO PGM-ALREADY-RUN(PGM-COUNTER)
011000*        DISPLAY "nop ", PGM-COUNTER
011100         ADD 1 TO PGM-COUNTER
011200*        DISPLAY "    ", PGM-COUNTER
011300        WHEN "acc"
011400*        DISPLAY "acc ", PGM-COUNTER
011500         MOVE "YES" TO PGM-ALREADY-RUN(PGM-COUNTER)
011600         COMPUTE PGM-ACCUM = PGM-ACCUM +
011700         PGM-OPERAND(PGM-COUNTER)
011800         ADD 1 TO PGM-COUNTER
011900*        DISPLAY "    ", PGM-COUNTER
012000        WHEN "jmp"
012100*        DISPLAY "jmp ", PGM-COUNTER
012200         MOVE "YES" TO PGM-ALREADY-RUN(PGM-COUNTER)
012300         COMPUTE PGM-COUNTER = PGM-COUNTER +
012400         PGM-OPERAND(PGM-COUNTER)
012500*        DISPLAY "    ", PGM-COUNTER
012600       END-EVALUATE
012700*      DISPLAY "PC: ", PGM-COUNTER,
012800*              " AC: ", PGM-ACCUM,
012900*              " AFTER:  ", PGM-OP-CODE(PGM-COUNTER),
013000*              " ", PGM-OPERAND(PGM-COUNTER)
013100*              " ", PGM-ALREADY-RUN(PGM-COUNTER)
013200       IF PGM-ALREADY-RUN(PGM-COUNTER) = "YES" THEN
013300         SET ALREADY-RUN TO TRUE
013400       END-IF
013500     END-PERFORM
013600     DISPLAY "PGM-COUNTER: ", PGM-COUNTER
013700     DISPLAY "PGM-ACCUM  : ", PGM-ACCUM
013800*
013900     STOP RUN.
