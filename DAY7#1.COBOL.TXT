000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01  INPUT-RECORD.
001800     05 IN-BAG           PIC X(200).
001900 WORKING-STORAGE SECTION.
002000 01  INPUT-FILE-EOF      PIC X(5).
002100     88  EOF-MET VALUE 'E-O-F'.
002200 01  BAG-ARRAY.
002300     05 BAG-ARRAY-1
002400        OCCURS 600 TIMES INDEXED BY INDEX-1.
002500        10 BAG-CONTAINER.
002600           15 BAG-CONT-STYLE PIC X(15).
002700           15 BAG-CONT-COLOUR PIC X(15).
002800        10 BAGS
002900           OCCURS 4 TIMES.
003000           15 BAG-COUNT PIC XX.
003100           15 BAG-STYLE PIC X(15).
003200           15 BAG-COLOUR PIC X(15).
003300        10 HOLD-GOLD PIC XXX.
003400 01  TEMP-ARRAY.
003500     05 TEMP-BAG-CONTAINER PIC X(40).
003600     05 TEMP-BAGS
003700        OCCURS 4 TIMES
003800        PIC X(40).
003900 77  ITER-IDX PIC 9(4) COMP.
004000 77  TEST-IDX PIC 9(4) COMP.
004100 77  CONT-IDX PIC 9(4) COMP.
004200 77  BAG-IDX PIC 9(4) COMP.
004300 77  COUNT-IDX PIC 9(4) COMP.
004400 77  SHINY-GOLD-TOTAL PIC 9(4) COMP.
004500 77  JUNK-1 PIC X.
004600 PROCEDURE DIVISION.
004700 PROCEDURE-HEADER-000.
004800     OPEN INPUT INPUT-FILE
004900     SET INDEX-1 TO 1
005000     PERFORM WITH TEST BEFORE UNTIL EOF-MET
005100       READ INPUT-FILE
005200       AT END
005300         SET EOF-MET TO TRUE
005400       END-READ
005500       IF NOT EOF-MET THEN
005600         MOVE SPACES TO TEMP-ARRAY
005700         UNSTRING
005800           IN-BAG
005900           DELIMITED BY "contain" OR ","
006000           INTO
006100           TEMP-BAG-CONTAINER
006200           TEMP-BAGS(1)
006300           TEMP-BAGS(2)
006400           TEMP-BAGS(3)
006500           TEMP-BAGS(4)
006600         END-UNSTRING
006700         MOVE SPACES TO BAG-ARRAY-1(INDEX-1)
006800         UNSTRING
006900           TEMP-BAG-CONTAINER
007000           DELIMITED BY SPACES
007100           INTO
007200           BAG-CONT-STYLE(INDEX-1)
007300           BAG-CONT-COLOUR(INDEX-1)
007400         END-UNSTRING
007500         PERFORM VARYING BAG-IDX FROM 1 BY 1
007600          UNTIL BAG-IDX > 4
007700           UNSTRING
007800             TEMP-BAGS(BAG-IDX)
007900             DELIMITED BY SPACES
008000             INTO
008100             JUNK-1
008200             BAG-COUNT(INDEX-1 BAG-IDX)
008300             BAG-STYLE(INDEX-1 BAG-IDX)
008400             BAG-COLOUR(INDEX-1 BAG-IDX)
008500           END-UNSTRING
008600           IF BAG-STYLE(INDEX-1 BAG-IDX) = "shiny" AND
008700              BAG-COLOUR(INDEX-1 BAG-IDX) = "gold" THEN
008800              MOVE "YES" TO HOLD-GOLD(INDEX-1)
008900           END-IF
009000           IF BAG-COUNT(INDEX-1 BAG-IDX) = "no" THEN
009100              MOVE "NO " TO HOLD-GOLD(INDEX-1)
009200           END-IF
009300*          DISPLAY " I: ", BAG-IDX
009400*              " G: ", HOLD-GOLD(INDEX-1)
009500*              " #: ", BAG-COUNT(INDEX-1 BAG-IDX)
009600*              " S: ", BAG-STYLE(INDEX-1 BAG-IDX)
009700*              " C: ", BAG-COLOUR(INDEX-1 BAG-IDX)
009800         END-PERFORM
009900         SET INDEX-1 UP BY 1
010000       END-IF
010100     END-PERFORM
010200     CLOSE INPUT-FILE
010300*
010400     PERFORM VARYING ITER-IDX FROM 1 BY 1 UNTIL ITER-IDX > 25
010500       PERFORM VARYING CONT-IDX FROM 1 BY 1 UNTIL CONT-IDX > 600
010600         IF HOLD-GOLD(CONT-IDX) = "YES" THEN
010700           PERFORM VARYING TEST-IDX FROM 1 BY 1
010800            UNTIL TEST-IDX > 600
010900             PERFORM VARYING BAG-IDX FROM 1 BY 1
011000              UNTIL BAG-IDX > 4
011100               IF BAG-CONT-STYLE(CONT-IDX) =
011200                  BAG-STYLE(TEST-IDX BAG-IDX)
011300               AND BAG-CONT-COLOUR(CONT-IDX) =
011400                   BAG-COLOUR(TEST-IDX BAG-IDX)
011500               AND HOLD-GOLD(TEST-IDX) NOT = "NO "
011600               THEN
011700                 MOVE "YES" TO HOLD-GOLD(TEST-IDX)
011800               END-IF
011900             END-PERFORM
012000           END-PERFORM
012100         END-IF
012200       END-PERFORM
012300       PERFORM COUNT-GOLD THRU COUNT-GOLD-EXIT
012400     END-PERFORM
012500*
012600     PERFORM COUNT-GOLD THRU COUNT-GOLD-EXIT
012700     STOP RUN.
012800*
012900 COUNT-GOLD.
013000     MOVE 0 TO SHINY-GOLD-TOTAL
013100     PERFORM VARYING COUNT-IDX FROM 1 BY 1 UNTIL COUNT-IDX > 600
013200       IF HOLD-GOLD(COUNT-IDX) = "YES" THEN
013300         ADD 1 TO SHINY-GOLD-TOTAL
013400       END-IF
013500     END-PERFORM
013600     DISPLAY ITER-IDX, " ", SHINY-GOLD-TOTAL
013700     .
013800 COUNT-GOLD-EXIT. EXIT.
013900*
