000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01  INPUT-RECORD.
001800     05 IN-TREES         PIC X(31).
001900 WORKING-STORAGE SECTION.
002000 01  INPUT-FILE-EOF      PIC X(5).
002100     88  EOF-MET VALUE 'E-O-F'.
002200 01  TREE-ARRAY.
002300     05 TREE-ARRAY-1 PIC X(31)
002400     OCCURS 323 TIMES INDEXED BY INDEX-1.
002500 01  X PIC S9(4) COMP.
002600 01  X-MOD-31 PIC S9(4) COMP.
002700 01  X-OFFSET PIC S9(4) COMP.
002800 01  Y PIC S9(4) COMP.
002900 01  DX PIC S9(4) COMP.
003000 01  DY PIC S9(4) COMP.
003100 01  TREE-COUNT-1 PIC S9(4) COMP VALUE +0.
003200 01  TREE-COUNT-2 PIC S9(4) COMP VALUE +0.
003300 01  TREE-COUNT-3 PIC S9(4) COMP VALUE +0.
003400 01  TREE-COUNT-4 PIC S9(4) COMP VALUE +0.
003500 01  TREE-COUNT-5 PIC S9(4) COMP VALUE +0.
003600 01  TREE-TOTAL   PIC S9(16) COMP.
003700 PROCEDURE DIVISION.
003800 PROCEDURE-HEADER-000.
003900     OPEN INPUT INPUT-FILE
004000     SET INDEX-1 TO 1
004100     PERFORM WITH TEST BEFORE UNTIL EOF-MET
004200       READ INPUT-FILE
004300       AT END
004400         SET EOF-MET TO TRUE
004500       END-READ
004600       IF NOT EOF-MET THEN
004700         MOVE IN-TREES TO TREE-ARRAY-1(INDEX-1)
004800         SET INDEX-1 UP BY 1
004900       END-IF
005000     END-PERFORM
005100     CLOSE INPUT-FILE
005200
005300*
005400* RIGHT 1, DOWN 1.
005500*
005600     MOVE 1 TO DX
005700     MOVE 1 TO DY
005800     MOVE 0 TO X
005900     MOVE X TO X-MOD-31
006000     PERFORM VARYING Y FROM 1 BY DY UNTIL Y >= INDEX-1
006600
006700       COMPUTE X-OFFSET = X-MOD-31 + 1
006800       IF TREE-ARRAY-1(Y)(X-OFFSET:1) = "#"
006900         ADD 1 TO TREE-COUNT-1
007000       END-IF
007100       COMPUTE X = X + DX
007200       COMPUTE X-MOD-31 = FUNCTION MOD(X, 31)
007300     END-PERFORM
007400     DISPLAY "TREES (1,1): ", TREE-COUNT-1
007500
007600*
007700* RIGHT 3, DOWN 1. (THIS IS THE SLOPE YOU ALREADY CHECKED.)
007800*
007900     MOVE 3 TO DX
008000     MOVE 1 TO DY
008100     MOVE 0 TO X
008200     MOVE X TO X-MOD-31
008300     PERFORM VARYING Y FROM 1 BY DY UNTIL Y >= INDEX-1
008800       COMPUTE X-OFFSET = X-MOD-31 + 1
008900       IF TREE-ARRAY-1(Y)(X-OFFSET:1) = "#"
009000         ADD 1 TO TREE-COUNT-2
009100       END-IF
009200       COMPUTE X = X + DX
009300       COMPUTE X-MOD-31 = FUNCTION MOD(X, 31)
009400     END-PERFORM
009500     DISPLAY "TREES (3,1): ", TREE-COUNT-2
009600
009700*
009800* RIGHT 5, DOWN 1.
009900*
010000     MOVE 5 TO DX
010100     MOVE 1 TO DY
010200     MOVE 0 TO X
010300     MOVE X TO X-MOD-31
010400     PERFORM VARYING Y FROM 1 BY DY UNTIL Y >= INDEX-1
011000       COMPUTE X-OFFSET = X-MOD-31 + 1
011100       IF TREE-ARRAY-1(Y)(X-OFFSET:1) = "#"
011200         ADD 1 TO TREE-COUNT-3
011300       END-IF
011400       COMPUTE X = X + DX
011500       COMPUTE X-MOD-31 = FUNCTION MOD(X, 31)
011600     END-PERFORM
011700     DISPLAY "TREES (5,1): ", TREE-COUNT-3
011800
011900*
012000* RIGHT 7, DOWN 1.
012100*
012200     MOVE 7 TO DX
012300     MOVE 1 TO DY
012400     MOVE 0 TO X
012500     MOVE X TO X-MOD-31
012600     PERFORM VARYING Y FROM 1 BY DY UNTIL Y >= INDEX-1
013100       COMPUTE X-OFFSET = X-MOD-31 + 1
013200       IF TREE-ARRAY-1(Y)(X-OFFSET:1) = "#"
013300         ADD 1 TO TREE-COUNT-4
013400       END-IF
013500       COMPUTE X = X + DX
013600       COMPUTE X-MOD-31 = FUNCTION MOD(X, 31)
013700     END-PERFORM
013800     DISPLAY "TREES (7,1): ", TREE-COUNT-4
013900
014000*
014100* RIGHT 1, DOWN 2.
014200*
014300     MOVE 1 TO DX
014400     MOVE 2 TO DY
014500     MOVE 0 TO X
014600     MOVE X TO X-MOD-31
014700     PERFORM VARYING Y FROM 1 BY DY UNTIL Y >= INDEX-1
015200       COMPUTE X-OFFSET = X-MOD-31 + 1
015300       IF TREE-ARRAY-1(Y)(X-OFFSET:1) = "#"
015400         ADD 1 TO TREE-COUNT-5
015500       END-IF
015600       COMPUTE X = X + DX
015700       COMPUTE X-MOD-31 = FUNCTION MOD(X, 31)
015800     END-PERFORM
015900     DISPLAY "TREES (1,2): ", TREE-COUNT-5
016000     COMPUTE TREE-TOTAL = TREE-COUNT-1 *
016100             TREE-COUNT-2 *
016200             TREE-COUNT-3 *
016300             TREE-COUNT-4 *
016400             TREE-COUNT-5
016500     DISPLAY "TOTAL: ", TREE-TOTAL
016600*
016700     STOP RUN.
