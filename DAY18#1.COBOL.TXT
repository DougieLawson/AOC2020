000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01 INPUT-RECORD.
001800    05 IN-NUMBER PIC X(160).
001900 WORKING-STORAGE SECTION.
002000 01 INPUT-FILE-EOF PIC X(5).
002100    88 EOF-MET VALUE "E-O-F".
002200 01 STACK-FLAG PIC X(5).
002300    88 STACK-FULL VALUE "FULL ".
002400    88 STACK-EMPTY VALUE "EMPTY".
002500 01 PAREN-STATUS-1 PIC X(5).
002600    88 PAREN-POPPED VALUE "PAREN".
002700 01 PAREN-STATUS-2 PIC X(4).
002800    88 LEFT-PAREN VALUE "LEFT".
002900
003000 01 HOME-WORK-ARRAY.
003100    05 HOME-WORK
003200       OCCURS 380 TIMES
003300       PIC X(160).
003400 01 HOME-WORK-COUNT PIC 999.
003500 01 HOME-WORK-IDX PIC 999.
003600 01 LINE-IDX PIC 999.
003700
003800 01 SUMS-ARRAY.
003900    05 SUMS OCCURS 380 TIMES.
004000       10 SUMS-RESULT PIC 9(15).
004100       10 SUMS-OUTPUT-ALL PIC X(90).
004200       10 SUMS-OUTPUT
004300          REDEFINES SUMS-OUTPUT-ALL
004400          OCCURS 90 TIMES PIC X.
004500 01 SUMS-OUTPUT-IDX PIC 999.
004600
004700 01 OPERANDS.
004800    05 OPERAND-STACK
004900       OCCURS 90 TIMES PIC X.
005000 01 OPERAND-STACK-IDX PIC 999.
005100 01 TEMP-OPERAND PIC X.
005200
005300 01 RPN.
005400    05 RPN-STACK
005500       OCCURS 90 TIMES PIC 9(15).
005600 01 RPN-STACK-IDX PIC 999.
005700 01 RPN-LEFT-NUM PIC 9(15).
005800 01 RPN-RIGHT-NUM PIC 9(15).
005900
006000 01 OVERALL-TOTAL PIC 9(15).
006100
006200 PROCEDURE DIVISION.
006300     OPEN INPUT INPUT-FILE
006400     MOVE 0 TO HOME-WORK-COUNT
006500     MOVE 0 TO OVERALL-TOTAL
006600     PERFORM WITH TEST BEFORE UNTIL EOF-MET
006700       READ INPUT-FILE
006800       AT END
006900         SET EOF-MET TO TRUE
007000       END-READ
007100       IF NOT EOF-MET THEN
007200         ADD 1 TO HOME-WORK-COUNT
007300         MOVE IN-NUMBER TO HOME-WORK(HOME-WORK-COUNT)
007400         MOVE HOME-WORK-COUNT TO HOME-WORK-IDX
007500         PERFORM PARSE-LINE
007600         PERFORM CALC-RPN
007700         COMPUTE OVERALL-TOTAL =
007800                 OVERALL-TOTAL +
007900                 SUMS-RESULT(HOME-WORK-IDX)
008000       END-IF
008100     END-PERFORM
008200     CLOSE INPUT-FILE
008300     DISPLAY "TOTAL: ", OVERALL-TOTAL
008400*
008500     STOP RUN.
008600*
008700 PARSE-LINE.
008800     MOVE 1 TO LINE-IDX
008900     MOVE 1 TO SUMS-OUTPUT-IDX
009000     MOVE 0 TO OPERAND-STACK-IDX
009100     MOVE SPACES TO TEMP-OPERAND
009200     SET STACK-EMPTY TO TRUE
009300     DISPLAY HOME-WORK(HOME-WORK-IDX)
009400     PERFORM
009500      UNTIL LINE-IDX > 160
009600       EVALUATE HOME-WORK(HOME-WORK-IDX)(LINE-IDX:1)
009700        WHEN 0 THRU 9 PERFORM DO-NUMBER
009800        WHEN "*" PERFORM DO-OPERAND
009900        WHEN "+" PERFORM DO-OPERAND
010000        WHEN "(" PERFORM DO-LEFT-PAREN
010100        WHEN ")" PERFORM DO-RIGHT-PAREN
010200       END-EVALUATE
010300       ADD 1 TO LINE-IDX
010400     END-PERFORM
010500     PERFORM UNTIL STACK-EMPTY
010600       PERFORM DO-OPERAND-UNSTACK
010700     END-PERFORM
010800     DISPLAY "SUMS:", HOME-WORK-IDX, " ", SUMS(HOME-WORK-IDX)
010900     EXIT.
011000*
011100 DO-NUMBER.
011200     MOVE HOME-WORK(HOME-WORK-IDX)(LINE-IDX:1)
011300     TO   SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
011400     ADD 1 TO SUMS-OUTPUT-IDX
011500     EXIT.
011600*
011700 DO-OPERAND.
011800     MOVE SPACES TO PAREN-STATUS-2
011900     IF OPERAND-STACK(OPERAND-STACK-IDX) = "("
012000       SET LEFT-PAREN TO TRUE
012100     ELSE
012200       PERFORM
012300        UNTIL STACK-EMPTY OR LEFT-PAREN
012400         PERFORM DO-OPERAND-UNSTACK
012500         IF OPERAND-STACK(OPERAND-STACK-IDX) = "("
012600           SET LEFT-PAREN TO TRUE
012700         END-IF
012800       END-PERFORM
012900     END-IF
013000     PERFORM DO-OPERAND-STACK
013100     EXIT.
013200*
013300 DO-LEFT-PAREN.
013400     PERFORM DO-OPERAND-STACK
013500     EXIT.
013600*
013700 DO-RIGHT-PAREN.
013800     MOVE SPACES TO PAREN-STATUS-1
013900     MOVE SPACES TO TEMP-OPERAND
014000     PERFORM DO-OPERAND-POP
014100     PERFORM WITH TEST BEFORE UNTIL PAREN-POPPED
014200       MOVE TEMP-OPERAND
014300       TO   SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
014400       ADD 1 TO SUMS-OUTPUT-IDX
014500       PERFORM DO-OPERAND-POP
014600     END-PERFORM
014700     EXIT.
014800*
014900 DO-OPERAND-POP.
015000     IF STACK-FULL
015100       MOVE OPERAND-STACK(OPERAND-STACK-IDX)
015200       TO TEMP-OPERAND
015300       MOVE SPACES TO OPERAND-STACK(OPERAND-STACK-IDX)
015400       SUBTRACT 1 FROM OPERAND-STACK-IDX
015500       IF OPERAND-STACK-IDX = 0
015600         SET STACK-EMPTY TO TRUE
015700       END-IF
015800       IF TEMP-OPERAND = "("
015900         SET PAREN-POPPED TO TRUE
016000       END-IF
016100     END-IF
016200     EXIT.
016300*
016400 DO-OPERAND-UNSTACK.
016500     PERFORM DO-OPERAND-POP
016600     MOVE TEMP-OPERAND
016700     TO SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
016800     ADD 1 TO SUMS-OUTPUT-IDX
016900     EXIT.
017000*
017100 DO-OPERAND-STACK.
017200     ADD 1 TO OPERAND-STACK-IDX
017300     SET STACK-FULL TO TRUE
017400     MOVE HOME-WORK(HOME-WORK-IDX)(LINE-IDX:1)
017500     TO   OPERAND-STACK(OPERAND-STACK-IDX)
017600     EXIT.
017700*
017800 CALC-RPN.
017900     MOVE 0 TO RPN-STACK-IDX
018000     MOVE 1 TO SUMS-OUTPUT-IDX
018100     PERFORM UNTIL SUMS-OUTPUT-IDX > 90
018200       EVALUATE SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
018300        WHEN 0 THRU 9 PERFORM DO-RPN-STACK
018400        WHEN "+" PERFORM DO-RPN-ADDITION
018500        WHEN "*" PERFORM DO-RPN-MULTIPLY
018600        WHEN OTHER MOVE 91 TO SUMS-OUTPUT-IDX
018700       END-EVALUATE
018800     END-PERFORM
018900     EXIT.
019000*
019100 DO-RPN-ADDITION.
019200     PERFORM DO-RPN-UNSTACK
019300     COMPUTE SUMS-RESULT(HOME-WORK-IDX) =
019400             (RPN-LEFT-NUM + RPN-RIGHT-NUM)
019500     PERFORM DO-RPN-STACK-RESULT
019600     EXIT.
019700*
019800 DO-RPN-MULTIPLY.
019900     PERFORM DO-RPN-UNSTACK
020000     COMPUTE SUMS-RESULT(HOME-WORK-IDX) =
020100             (RPN-LEFT-NUM * RPN-RIGHT-NUM)
020200     PERFORM DO-RPN-STACK-RESULT
020300     EXIT.
020400*
020500 DO-RPN-STACK.
020600     ADD 1 TO RPN-STACK-IDX
020700     MOVE SUMS-OUTPUT(HOME-WORK-IDX SUMS-OUTPUT-IDX)
020800     TO   RPN-STACK(RPN-STACK-IDX)
020900     ADD 1 TO SUMS-OUTPUT-IDX
021000     EXIT.
021100*
021200 DO-RPN-STACK-RESULT.
021300     ADD 1 TO RPN-STACK-IDX
021400     MOVE SUMS-RESULT(HOME-WORK-IDX)
021500     TO   RPN-STACK(RPN-STACK-IDX)
021600     ADD 1 TO SUMS-OUTPUT-IDX
021700     EXIT.
021800*
021900 DO-RPN-UNSTACK.
022000     MOVE RPN-STACK(RPN-STACK-IDX)
022100     TO   RPN-LEFT-NUM
022200     MOVE 0 TO RPN-STACK(RPN-STACK-IDX)
022300     SUBTRACT 1 FROM RPN-STACK-IDX
022400     MOVE RPN-STACK(RPN-STACK-IDX)
022500     TO   RPN-RIGHT-NUM
022600     MOVE 0 TO RPN-STACK(RPN-STACK-IDX)
022700     SUBTRACT 1 FROM RPN-STACK-IDX
022800     EXIT.
