000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01  INPUT-RECORD.
001800     05 IN-NUMBERS PIC X(80).
001900 WORKING-STORAGE SECTION.
002000 01  INPUT-FILE-EOF      PIC X(5).
002100     88  EOF-MET VALUE 'E-O-F'.
002200 77  NUMBER-LINE PIC X(80).
002300
002400* 0,3,1,6,7,5
002500* 01: 0
002600* 02: 3
002700* 03: 1
002800* 04: 6
002900* 05: 7
003000* 06: 5
003100* 07: 0
003200* 08: 7-1 = 6
003300* 09: 8-4 = 4
003400* 10: 0
003500* 11: 10-7 = 3
003600* 12: 11-2 = 9
003700* 13: 0
003800* 14: 13-10 = 3
003900* 15: 14-11 = 3
004000* 16: 1
004100* 17: 16-3 = 13
004200* 18: 0
004300* 19: 18-3 = 15
004400* 20: 0
004500
004600 01  NUMBERS-ARRAY.
004700     05 NUMBER-ENTRY
004800        OCCURS 2020 TIMES
004900        PIC 9(10).
005000 77  NUM-IDX PIC 9(5).
005100 77  NUM-IDX-MINUS-1 PIC S9(5).
005200 77  NUM-IDX-PLUS-1 PIC S9(5).
005300 77  NUM-REVERSE-IDX PIC S9(5).
005400 77  NUM-FOUND PIC S9(5).
005500
005600 PROCEDURE DIVISION.
005700     OPEN INPUT INPUT-FILE
005800     PERFORM WITH TEST BEFORE UNTIL EOF-MET
005900       READ INPUT-FILE
006000       AT END
006100         SET EOF-MET TO TRUE
006200       END-READ
006300       IF NOT EOF-MET THEN
006400         MOVE IN-NUMBERS TO NUMBER-LINE
006500       END-IF
006600     END-PERFORM
006700     CLOSE INPUT-FILE
006800     UNSTRING NUMBER-LINE DELIMITED BY ALL "," OR ALL " "
006900      INTO NUMBER-ENTRY(1)
007000           NUMBER-ENTRY(2)
007100           NUMBER-ENTRY(3)
007200           NUMBER-ENTRY(4)
007300           NUMBER-ENTRY(5)
007400           NUMBER-ENTRY(6)
007500     END-UNSTRING
007600*
007700     PERFORM VARYING NUM-IDX FROM 7 BY 1
007800      UNTIL NUM-IDX > 2020
007900       MOVE 0 TO NUMBER-ENTRY(NUM-IDX)
008000     END-PERFORM
008100*
008200     PERFORM VARYING NUM-IDX FROM 7 BY 1
008300      UNTIL NUM-IDX >= 2020
008400       COMPUTE NUM-IDX-MINUS-1 =
008500               NUM-IDX - 1
008600       PERFORM SCAN-BACKWARDS
008700     END-PERFORM
008800     DISPLAY " ", NUMBER-ENTRY(2020)
008900
009000*
009100     STOP RUN.
009200*
009300 SCAN-BACKWARDS.
009400     MOVE -1 TO NUM-FOUND
009500     MOVE NUM-IDX-MINUS-1 TO NUM-REVERSE-IDX
009600     COMPUTE NUM-IDX-PLUS-1 =
009700             NUM-IDX + 1
009800     PERFORM UNTIL NUM-REVERSE-IDX < 1
009900*      DISPLAY "NRI: ", NUM-REVERSE-IDX,
010000*              " NE(NRI): ", NUMBER-ENTRY(NUM-REVERSE-IDX),
010100*              " NE(IX): ", NUMBER-ENTRY(NUM-IDX)
010200*              " NF: ", NUM-FOUND
010300       IF NUMBER-ENTRY(NUM-REVERSE-IDX) =
010400          NUMBER-ENTRY(NUM-IDX)
010500         MOVE NUM-REVERSE-IDX TO NUM-FOUND
010600         MOVE 1 TO NUM-REVERSE-IDX
010700       END-IF
010800       SUBTRACT 1 FROM NUM-REVERSE-IDX
010900     END-PERFORM
011000     IF NUM-FOUND > 0 THEN
011100       COMPUTE NUMBER-ENTRY(NUM-IDX-PLUS-1) =
011200               NUM-IDX -
011300               NUM-FOUND
011400     ELSE
011500       MOVE 0 TO NUMBER-ENTRY(NUM-IDX-PLUS-1)
011600     END-IF
011700*    DISPLAY "  IDX:", NUM-IDX-PLUS-1
011800*            " ", NUMBER-ENTRY(NUM-IDX-PLUS-1)
011900     EXIT.
