000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01 INPUT-RECORD.
001800    05 IN-CARD PIC X(40).
001900    05 IN-CARD-VALUE REDEFINES IN-CARD
002000       PIC XX.
002100 WORKING-STORAGE SECTION.
002200 01 EOF PIC X(5) VALUE SPACES.
002300    88 EOF-MET VALUE "E-O-F".
002400 01 QUEUE-STATUS PIC X(5) VALUE SPACES.
002500    88 QUEUE-EMPTY VALUE "EMPTY".
002600 01 ABEND.
002700    05 ABEND-3500 PIC S9(9) COMP VALUE 3500.
002800    05 ABEND-OPT  PIC S9(9) COMP VALUE 1.
002900
003000 77 CARD-OWNER PIC X.
003100 77 CARD-QUEUE-IDX-1 PIC 99.
003200 77 CARD-QUEUE-FRONT-1 PIC 99.
003300 77 CARD-QUEUE-REAR-1 PIC 99.
003400 77 CARD-QUEUE-IDX-2 PIC 99.
003500 77 CARD-QUEUE-FRONT-2 PIC 99.
003600 77 CARD-QUEUE-REAR-2 PIC 99.
003700 01 CARDS.
003800    05 CARD-QUEUE-1 OCCURS 51 TIMES.
003900       10 CARD-VALUE-1 PIC 99 VALUE 0.
004000    05 CARD-QUEUE-2 OCCURS 51 TIMES.
004100       10 CARD-VALUE-2 PIC 99 VALUE 0.
004200
004300 77 CARD-RESULT-MULTIPLIER pic 99 comp.
004400 77 CARD-RESULT-IDX PIC 99.
004500 77 GRAND-TOTAL PIC 9(15) COMP.
004600 77 PRINT-IDX PIC 99.
004700 77 ROUND-IDX PIC 9(5).
004800 77 INITIALISE-IDX PIC 99.
004900
005000 PROCEDURE DIVISION.
005100     OPEN INPUT INPUT-FILE
005200     MOVE 0 TO CARD-QUEUE-IDX-1
005300     MOVE 0 TO CARD-QUEUE-IDX-2
005400     MOVE 0 TO ROUND-IDX
005500     PERFORM WITH TEST BEFORE UNTIL EOF-MET
005600       READ INPUT-FILE
005700       AT END
005800         SET EOF-MET TO TRUE
005900       END-READ
006000       IF NOT EOF-MET AND IN-CARD NOT = SPACES
006100         IF IN-CARD(1:6) = "Player"
006200           MOVE IN-CARD(8:1) TO CARD-OWNER
006300         ELSE
006400           IF CARD-OWNER = "1"
006500             ADD 1 TO CARD-QUEUE-IDX-1
006600             COMPUTE CARD-VALUE-1(CARD-QUEUE-IDX-1) =
006700              FUNCTION NUMVAL(IN-CARD-VALUE)
006800           ELSE
006900             ADD 1 TO CARD-QUEUE-IDX-2
007000             COMPUTE CARD-VALUE-2(CARD-QUEUE-IDX-2) =
007100              FUNCTION NUMVAL(IN-CARD-VALUE)
007200           END-IF
007300         END-IF
007400       END-IF
007500     END-PERFORM
007600     CLOSE INPUT-FILE
007700
007800     MOVE 0 TO CARD-OWNER
007900     MOVE 1 TO CARD-QUEUE-FRONT-1
008000     MOVE 1 TO CARD-QUEUE-FRONT-2
008100     MOVE CARD-QUEUE-IDX-1 TO CARD-QUEUE-REAR-1
008200     MOVE CARD-QUEUE-IDX-2 TO CARD-QUEUE-REAR-2
008300
008400*    DISPLAY "Q1 LEN:   ", CARD-QUEUE-IDX-1
008500*    DISPLAY "Q1 FRONT: ", CARD-QUEUE-FRONT-1
008600*    DISPLAY "Q1 REAR:  ", CARD-QUEUE-REAR-1
008700*    DISPLAY "Q2 LEN:   ", CARD-QUEUE-IDX-2
008800*    DISPLAY "Q2 FRONT: ", CARD-QUEUE-FRONT-2
008900*    DISPLAY "Q2 REAR:  ", CARD-QUEUE-REAR-2
009000*    DISPLAY "CARD OWNER: ", CARD-OWNER
009100
009200*    PERFORM PRINT-CARD-STACKS
009300     PERFORM COMPARE-CARDS
009400
009500*    DISPLAY "Q1 LEN:   ", CARD-QUEUE-IDX-1
009600*    DISPLAY "Q1 FRONT: ", CARD-QUEUE-FRONT-1
009700*    DISPLAY "Q1 REAR:  ", CARD-QUEUE-REAR-1
009800*    DISPLAY "Q2 LEN:   ", CARD-QUEUE-IDX-2
009900*    DISPLAY "Q2 FRONT: ", CARD-QUEUE-FRONT-2
010000*    DISPLAY "Q2 REAR:  ", CARD-QUEUE-REAR-2
010100*    DISPLAY "CARD OWNER: ", CARD-OWNER
010200
010300     IF CARD-OWNER = 1 THEN
010400       MOVE CARD-QUEUE-FRONT-1
010500       TO CARD-RESULT-IDX
010600     ELSE
010700       MOVE CARD-QUEUE-FRONT-2
010800       TO CARD-RESULT-IDX
010900     END-IF
011000
011100     MOVE 0 TO GRAND-TOTAL
011200     PERFORM VARYING CARD-RESULT-MULTIPLIER FROM 50 BY -1
011300      UNTIL CARD-RESULT-MULTIPLIER < 1
011400*      DISPLAY "Result IDX: ", CARD-RESULT-IDX
011500       IF CARD-OWNER = 1 THEN
011600*        DISPLAY "1: MULT: ", CARD-RESULT-MULTIPLIER,
011700*        DISPLAY "1: CARD: ", CARD-VALUE-1(CARD-RESULT-IDX)
011800*        DISPLAY "1: GRAND: ", GRAND-TOTAL
011900         COMPUTE GRAND-TOTAL =
012000          GRAND-TOTAL +
012100          (CARD-RESULT-MULTIPLIER *
012200           CARD-VALUE-1(CARD-RESULT-IDX))
012300       ELSE
012400*        DISPLAY "2: MULT: ", CARD-RESULT-MULTIPLIER,
012500*        DISPLAY "2: CARD: ", CARD-VALUE-1(CARD-RESULT-IDX)
012600*        DISPLAY "2: GRAND: ", GRAND-TOTAL
012700         COMPUTE GRAND-TOTAL =
012800          GRAND-TOTAL +
012900          (CARD-RESULT-MULTIPLIER *
013000           CARD-VALUE-2(CARD-RESULT-IDX))
013100       END-IF
013200       ADD 1 TO CARD-RESULT-IDX
013300       IF CARD-RESULT-IDX > 50
013400         MOVE 1 TO CARD-RESULT-IDX
013500       END-IF
013600     END-PERFORM
013700
013800     DISPLAY "Grand total:", GRAND-TOTAL
013900
014000     STOP RUN.
014100*
014200 PRINT-CARD-STACKS.
014300     PERFORM VARYING PRINT-IDX FROM 1 BY 1
014400     UNTIL PRINT-IDX > 51
014500       DISPLAY "1:", PRINT-IDX, " :", CARD-QUEUE-1(PRINT-IDX)
014600               " 2:", PRINT-IDX, " :", CARD-QUEUE-2(PRINT-IDX)
014700     END-PERFORM
014800     DISPLAY " "
014900     EXIT.
015000*
015100 COMPARE-CARDS.
015200     MOVE 1 TO ROUND-IDX
015300     PERFORM UNTIL QUEUE-EMPTY
015400
015500*      DISPLAY "ROUND :", ROUND-IDX
015600*      DISPLAY "-------"
015700       IF CARD-QUEUE-1(CARD-QUEUE-FRONT-1) >
015800          CARD-QUEUE-2(CARD-QUEUE-FRONT-2)
015900         PERFORM PLAYER-1-WINS
016000*        DISPLAY "Player 1 wins"
016100*        DISPLAY "1 win 1:", CARD-QUEUE-1(CARD-QUEUE-FRONT-1),
016200*                " > 2:", CARD-QUEUE-2(CARD-QUEUE-FRONT-2)
016300       ELSE
016400         PERFORM PLAYER-2-WINS
016500*        DISPLAY "Player 2 wins "
016600*        DISPLAY "1 lose 1:", CARD-QUEUE-1(CARD-QUEUE-FRONT-1),
016700*                " < 2:", CARD-QUEUE-2(CARD-QUEUE-FRONT-2)
016800       END-IF
016900*      PERFORM PRINT-CARD-STACKS
017000       ADD 1 TO ROUND-IDX
017100     END-PERFORM
017200     EXIT.
017300*
017400 COPY QUESHUF
017500   REPLACING ==:A:== BY ==1==
017600             ==:B:== BY ==2==.
017700*
017800 COPY QUESHUF
017900   REPLACING ==:A:== BY ==2==
018000             ==:B:== BY ==1==.
