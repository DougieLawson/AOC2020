000100 TITLE 'DOUGIE''S TEST COBOL PROGRAM'
000200 IDENTIFICATION DIVISION.
000300   PROGRAM-ID. DGL.
000400 ENVIRONMENT DIVISION.
000500 INPUT-OUTPUT SECTION.
000600 FILE-CONTROL.
000700       SELECT INPUT-FILE
000800         ASSIGN TO INFILE
000900         ORGANIZATION IS SEQUENTIAL.
001000 DATA DIVISION.
001100 FILE SECTION.
001200 FD   INPUT-FILE
001300      BLOCK 0 RECORDS
001400*     RECORD 80 CHARACTERS
001500      LABEL RECORDS OMITTED
001600      DATA RECORD IS INPUT-RECORD.
001700 01  INPUT-RECORD.
001800     05 IN-BUS PIC X(175).
001900 WORKING-STORAGE SECTION.
002000 01  INPUT-FILE-EOF      PIC X(5).
002100     88  EOF-MET VALUE 'E-O-F'.
002200 01  BUS-RECORDS.
002300     05 BUS-REC
002400        OCCURS 2 TIMES
002500        INDEXED BY IN-BUS-INDEX
002600        PIC X(175).
002700 77  BUS-REC-SPACES PIC 999 COMP.
002800 01  BUS-TIMETABLE.
002900     05 BUS-TIMES OCCURS 20 TIMES.
003000        10 BUS-DEPARTURE-TIME PIC 999 COMP.
003100        10 BUS-DEPARTURE-OFFSET PIC 99 COMP.
003200 77  BUS-REC-START PIC 999 COMP.
003300 77  BUS-REC-PTR PIC 999 COMP.
003400 77  BUS-REC-LEN PIC 999 COMP.
003500 77  BUS-TIME-IDX PIC 99 COMP.
003600 77  BUS-X-COUNT PIC 99 COMP.
003700 77  BUS-DEPARTURES-IDX PIC 99 COMP.
003800 77  BUS-DEP-TIME PIC S9(15) COMP.
003900 77  BUS-DEP-MULTIPLIER PIC S9(15) COMP.
004000 77  BUS-TEMP-VALUE PIC S9(15) COMP.
004100 77  BUS-TEMP-MOD-VAL PIC S9(15) COMP.
004200
004300 PROCEDURE DIVISION.
004400 PROCEDURE-HEADER-000.
004500     OPEN INPUT INPUT-FILE
004600     SET IN-BUS-INDEX TO 1
004700     PERFORM WITH TEST BEFORE UNTIL EOF-MET
004800       READ INPUT-FILE
004900       AT END
005000         SET EOF-MET TO TRUE
005100       END-READ
005200       IF NOT EOF-MET THEN
005300         MOVE IN-BUS TO BUS-REC(IN-BUS-INDEX)
005400         SET IN-BUS-INDEX UP BY 1
005500       END-IF
005600     END-PERFORM
005700     CLOSE INPUT-FILE
005800*
005900     MOVE 1 TO BUS-REC-START
006000     MOVE 1 TO BUS-REC-PTR
006100     MOVE 0 TO BUS-REC-LEN
006200     MOVE 1 TO BUS-TIME-IDX
006300     MOVE 0 TO BUS-X-COUNT
006400     PERFORM UNTIL BUS-REC-PTR > 175
006500       IF BUS-REC(2)(BUS-REC-PTR:1) = ","
006600       OR BUS-REC(2)(BUS-REC-PTR:1) = SPACES
006700         ADD 1 TO BUS-X-COUNT
006800         IF BUS-REC(2)(BUS-REC-START:2) NOT = "x,"
006900           COMPUTE BUS-REC-LEN =
007000                   BUS-REC-PTR -
007100                   BUS-REC-START
007200           MOVE BUS-REC(2)(BUS-REC-START:BUS-REC-LEN)
007300                TO BUS-DEPARTURE-TIME(BUS-TIME-IDX)
007400           COMPUTE BUS-DEPARTURE-OFFSET(BUS-TIME-IDX) =
007500                   BUS-X-COUNT - 1
007600           IF BUS-REC(2)(BUS-REC-PTR:1) = SPACES
007700             MOVE 175 TO BUS-REC-PTR
007800           ELSE
007900             ADD 1 TO BUS-TIME-IDX
008000           END-IF
008100         END-IF
008200         MOVE 0 TO BUS-REC-LEN
008300         ADD 1 TO BUS-REC-PTR
008400         MOVE BUS-REC-PTR TO BUS-REC-START
008500       END-IF
008600       ADD 1 TO BUS-REC-PTR
008700     END-PERFORM
008800     DISPLAY "TIME-IDX: ", BUS-TIME-IDX
008900*
009000* BUS-DEPARTURE-TIME(BUS-TIME-IDX)   - ID
009100* BUS-DEPARTURE-OFFSET(BUS-TIME-IDX) - REQ
009200*
009300     MOVE 0 TO BUS-DEP-TIME
009400     MOVE 0 TO BUS-TEMP-VALUE
009500     MOVE 1 TO BUS-DEP-MULTIPLIER
009600     COMPUTE BUS-DEP-MULTIPLIER =
009700             BUS-DEP-MULTIPLIER *
009800             BUS-DEPARTURE-TIME(1)
009900     DISPLAY "DEP: ", BUS-DEP-TIME, " TEMP: ", BUS-TEMP-VALUE,
010000             " OFF: ", BUS-DEPARTURE-OFFSET(1),
010100             " ID: ", BUS-DEPARTURE-TIME(1)
010200     MOVE 2 TO BUS-DEPARTURES-IDX
010300     PERFORM UNTIL BUS-DEPARTURES-IDX > BUS-TIME-IDX
010400       COMPUTE BUS-DEP-TIME =
010500               BUS-DEP-TIME +
010600               BUS-DEP-MULTIPLIER
010700       COMPUTE BUS-TEMP-VALUE =
010800               (BUS-DEP-TIME +
010900                 BUS-DEPARTURE-OFFSET(BUS-DEPARTURES-IDX))
011000       COMPUTE BUS-TEMP-MOD-VAL =
011100               FUNCTION MOD(
011200                BUS-TEMP-VALUE,
011300                BUS-DEPARTURE-TIME(BUS-DEPARTURES-IDX)
011400               )
011500       IF BUS-TEMP-MOD-VAL = 0
011600         COMPUTE BUS-DEP-MULTIPLIER =
011700                 BUS-DEP-MULTIPLIER *
011800                 BUS-DEPARTURE-TIME(BUS-DEPARTURES-IDX)
011900         DISPLAY "MULT: ", BUS-DEP-MULTIPLIER
012000         DISPLAY "DEP: ", BUS-DEP-TIME, " TEMP: ", BUS-TEMP-VALUE,
012100                " OFF: ", BUS-DEPARTURE-OFFSET(BUS-DEPARTURES-IDX),
012200                 " ID: ", BUS-DEPARTURE-TIME(BUS-DEPARTURES-IDX)
012300         ADD 1 TO BUS-DEPARTURES-IDX
012400       END-IF
012500     END-PERFORM
012600     DISPLAY BUS-DEP-TIME
012700
012800*
012900*   let time = 0
013000*   let multiplier = buses{0}.id
013100*   let unsatisfied = 1
013200*   let next
013300*
013400*   while (unsatisfied < buses.length) {
013500*     time += multiplier
013600*     next = buses{unsatisfied}
013700*
013800*     if ((time + next.req) % next.id === 0) {
013900*       multiplier *= next.id
014000*       unsatisfied++
014100*     }
014200*   }
014300*   return time
014400*   725169163285238
014500*
014600*
014700     STOP RUN.
014800*
